# coding: utf-8

"""
    Telstra Programmable Network API

    Telstra Programmable Network is a self-provisioning platform that allows its users to create on-demand connectivity services between multiple end-points and add various network functions to those services. Programmable Network enables to connectivity to a global ecosystem of networking services as well as public and private cloud services. Once you are connected to the platform on one or more POPs (points of presence), you can start creating those services based on the use case that you want to accomplish. The Programmable Network API is available to all customers who have registered to use the Programmable Network. To register, please contact your account representative.  # noqa: E501

    OpenAPI spec version: 2.3.3
    Contact: pnapi-support@team.telstra.com
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


from __future__ import absolute_import

import unittest

import TelstraTPN
from TelstraTPN.api.topologies_api import TopologiesApi  # noqa: E501
from TelstraTPN.rest import ApiException


class TestTopologiesApi(unittest.TestCase):
    """TopologiesApi unit test stubs"""

    def setUp(self):
        self.api = TelstraTPN.api.topologies_api.TopologiesApi()  # noqa: E501

    def tearDown(self):
        pass

    def test_eisendpointsendpointuuidassigntopologytagpost(self):
        """Test case for eisendpointsendpointuuidassigntopologytagpost

        Assign an Endpoint to a Topology  # noqa: E501
        """
        pass

    def test_eisendpointstopologytaguuiddelete(self):
        """Test case for eisendpointstopologytaguuiddelete

        Remove Endpoint from a Topology  # noqa: E501
        """
        pass

    def test_eisendpointstopologytaguuidtopotaguuidget(self):
        """Test case for eisendpointstopologytaguuidtopotaguuidget

        List Endpoints for Topology  # noqa: E501
        """
        pass

    def test_ttmstopologytagget(self):
        """Test case for ttmstopologytagget

        List all topology tags  # noqa: E501
        """
        pass

    def test_ttmstopologytagpost(self):
        """Test case for ttmstopologytagpost

        Create a named topology tag  # noqa: E501
        """
        pass

    def test_ttmstopologytagtopotaguuiddelete(self):
        """Test case for ttmstopologytagtopotaguuiddelete

        Delete a topology tag  # noqa: E501
        """
        pass

    def test_ttmstopologytagtopotaguuidget(self):
        """Test case for ttmstopologytagtopotaguuidget

        Get information about the specified topology tag  # noqa: E501
        """
        pass

    def test_ttmstopologytagtopotaguuidobjectsget(self):
        """Test case for ttmstopologytagtopotaguuidobjectsget

        List objects for Topology  # noqa: E501
        """
        pass

    def test_ttmstopologytagtopotaguuidput(self):
        """Test case for ttmstopologytagtopotaguuidput

        Update a topology tag's name and/or description  # noqa: E501
        """
        pass


if __name__ == '__main__':
    unittest.main()
