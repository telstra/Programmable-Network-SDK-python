# coding: utf-8

"""
    Telstra Programmable Network API

    Telstra Programmable Network is a self-provisioning platform that allows its users to create on-demand connectivity services between multiple end-points and add various network functions to those services. Programmable Network enables to connectivity to a global ecosystem of networking services as well as public and private cloud services. Once you are connected to the platform on one or more POPs (points of presence), you can start creating those services based on the use case that you want to accomplish. The Programmable Network API is available to all customers who have registered to use the Programmable Network. To register, please contact your account representative.  # noqa: E501

    OpenAPI spec version: 2.3.3
    Contact: pnapi-support@team.telstra.com
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


from __future__ import absolute_import

import unittest

import TelstraTPN
from TelstraTPN.api.endpoints_api import EndpointsApi  # noqa: E501
from TelstraTPN.rest import ApiException


class TestEndpointsApi(unittest.TestCase):
    """EndpointsApi unit test stubs"""

    def setUp(self):
        self.api = TelstraTPN.api.endpoints_api.EndpointsApi()  # noqa: E501

    def tearDown(self):
        pass

    def test_eisendpointendpointuuidendpointuuidput(self):
        """Test case for eisendpointendpointuuidendpointuuidput

        Update Endpoint name  # noqa: E501
        """
        pass

    def test_eisendpointsendpointuuidassigntopologytagpost(self):
        """Test case for eisendpointsendpointuuidassigntopologytagpost

        Assign an Endpoint to a Topology  # noqa: E501
        """
        pass

    def test_eisendpointstopologytaguuiddelete(self):
        """Test case for eisendpointstopologytaguuiddelete

        Remove Endpoint from a Topology  # noqa: E501
        """
        pass

    def test_eisendpointstopologytaguuidtopotaguuidget(self):
        """Test case for eisendpointstopologytaguuidtopotaguuidget

        List Endpoints for Topology  # noqa: E501
        """
        pass

    def test_inventoryendpointendpointuuidget(self):
        """Test case for inventoryendpointendpointuuidget

        Get information about the specified endpoint  # noqa: E501
        """
        pass

    def test_inventoryendpointscustomeruuidcustomeruuidget(self):
        """Test case for inventoryendpointscustomeruuidcustomeruuidget

        Get list of endpoints for a customer  # noqa: E501
        """
        pass

    def test_inventoryregularendpointpost(self):
        """Test case for inventoryregularendpointpost

        Create Physical (Port) Endpoint  # noqa: E501
        """
        pass

    def test_inventoryregularvportpost(self):
        """Test case for inventoryregularvportpost

        Create VPort for physical endpoint  # noqa: E501
        """
        pass

    def test_inventoryvnfendpointpost(self):
        """Test case for inventoryvnfendpointpost

        Instantiate Virtual Network Function  # noqa: E501
        """
        pass


if __name__ == '__main__':
    unittest.main()
